from Products.models import Product, Category, Attribute


def add_parent_ids(category,category_list):
    if(category.parent_id):
        parent_category = Category(id=category.parent_id)
        category_list.append(parent_category)
        add_parent_ids(parent_category,category_list)
    
def get_category_links(product=None, category=None):
    if(product):
        category_id = product.category_id
    elif(category):
        category_id = category.id
        
    category_list = []
    add_parent_ids(category,category_list)
        
    
        
#     category_tree = get_categories(category_id=category_id)
    
        

def add_sub_category(category):
    if(category.children_ids):
        category.sub_categories = []
        for id in category.children_ids.split(','):
            id = int(id)
            sub_category = Category(id=id)
            category.sub_categories.append(sub_category)
    for sub_category in category.sub_categories:
        add_sub_category(sub_category)

def get_categories(category_id=None):
    category_tree = []
    if(category_id):
        category = Category(id = category_id)
        id_list = []
        for id in category.children_ids.split(','):
            id = int(id)
            id_list.append(id)
            pass
        categories = Category.objects.all().filter(id=id_list) #i think this works?
        for category in categories:
            category_tree.append(category)
    else:
        categories = Category.objects.all()
        for category in categories:
            if( not category.parent_id):
                category_tree.append(category)
    
    category_tree.sort(key=lambda x: x.name, reverse=False)  
    for category in category_tree:
        add_sub_category(category)
            
    return category_tree


def get_products_in_category(category):
    category_tree = get_categories(category_id=category.id)
    pass